/*
*
*	-= PGD BASE =-
*	Protioso Gerenciamento de Dados
*	Autor: Protioso ([VGS]Protioso_OC)
*
*/

stock pgd_VerificarLinha(strleitura[MAX_PGD_CHAR], strbusca[MAX_PGD_CHAR], prefixo[2] = ":", &bool:s_b, linha, bool:a_c = true)
{
	if(!strfind(strleitura, strbusca, false))
	{
	    if(!s_b)
	    {
			if(pgd_VerificarPrefixo(strleitura, prefixo, strlen(strbusca))) s_b = true;
		 	return 1;
		 }
		 else
		 {
		    if(a_c)
		    {
		 		printf("[PGD]: Erro! Duas chaves encontradas (%s - Linha %d)!", strbusca, linha);
		 		print("	  Provavelmente criadas manualmente! Apague uma!");
		 	}
		 	return 0;
		 }
 	}
 	return 0;
}

stock pgd_VerificarPrefixo(strleitura[MAX_PGD_CHAR], prefixo[2] = ":", t_strb)
{
	new c[2];
	c[0] = strleitura[t_strb-1];
	return (c[0] != prefixo[0]) ? 0 : 1;
}

stock pgd_ChavesDiferentes(strleitura[MAX_PGD_CHAR], strbusca[MAX_PGD_CHAR], prefixo[2] = ":")
{
	if(!strfind(strleitura, strbusca, false) && pgd_VerificarPrefixo(strleitura, prefixo, strlen(strbusca))) return 0;
	else return 1;
}

stock pgd_FormatarValor(str[MAX_VALOR_CHAR]) for(new s; s < 2; s++) str[strlen(str)-1] = 0;

stock pgd_EscreverLinha(arquivo[], linha, cont[MAX_PGD_LINHA_CHAR])
{
	if(!pgd_ArquivoExiste(arquivo)) pgd_CriarArquivo(arquivo);
	new
	    bool:escrito,
		str[MAX_PGD_LINHA_CHAR],
		File:ArqM,
		File:ArqT,
		linhas;
	if(!linha) linha = 1;
	format(str, sizeof(str), "%s.PGD_T", arquivo);
	ArqM = fopen(arquivo, io_read);
	ArqT = fopen(str, io_append);
	while(fread(ArqM, str, sizeof(str), false))
	{
		linhas++;
	    if(linhas == linha)
		{
			fwrite(ArqT, cont);
			escrito = true;
		}
	    fwrite(ArqT, str);
	}
	fclose(ArqM);
	fclose(ArqT);
	format(str, sizeof(str), "%s.PGD_T", arquivo);
	pgd_CopiarDados(str, arquivo);
	pgd_ApagarArquivo(str);
	return escrito;
}

stock pgd_ProcurarLinha(arquivo[], busca[MAX_PGD_LINHA_CHAR], bool:comparar = false)
{
	if(!pgd_ArquivoExiste(arquivo)) return 0;
	new
	    str[MAX_PGD_LINHA_CHAR],
		File:ArqM,
		linha,
		linhas;
	ArqM = fopen(arquivo, io_read);
	while(fread(ArqM, str, sizeof(str), false))
	{
		linhas++;
		if(comparar) if(!strcmp(busca, str, false)) linha = linhas;
	    else if(!strfind(str, busca, false)) linha = linhas;
	}
	return linha;
}

stock pgd_StrExiste(arquivo[], busca[MAX_PGD_LINHA_CHAR], bool:comparar = false) return (pgd_ProcurarLinha(arquivo, busca, comparar) > 0) ? 1 : 0;
